let co2Initialized = false;
let co2CartUpdate = false;
const priceFormatter = new Intl.NumberFormat('de-DE', {
  style: 'currency',
  currency: 'EUR'
});

const applyDatoraDiscount = async function() {
  const datoraInput = document.querySelector('input[name="datora-discount"][form="datora-form"]') || 
                     document.querySelector('input[name="datora-discount"]');
  if(!datoraInput) return;
  const discountCode = datoraInput.value.trim();
  const datoraContainer = datoraInput.closest('.datora-discount-field-container');
  if(discountCode.length < 1) {
    return;
  }
  if(datoraContainer) datoraContainer.classList.add('loading');
  if (typeof co2 !== 'undefined' && typeof co2.setDiscountCode === 'function') {
    let resultChangeDiscountCode = await co2.setDiscountCode(discountCode);
    if(resultChangeDiscountCode){
      if(datoraContainer){
        datoraContainer.classList.add('done');
        datoraContainer.classList.remove('error', 'loading');
      }
      document.documentElement.dispatchEvent(new CustomEvent('cart:refresh', { bubbles: true }));
    } else {
      if(datoraContainer){
        datoraContainer.classList.add('error');
        datoraContainer.classList.remove('done', 'loading');
      }
    }
  }
};

const removeDatoraDiscount = async function() {
  const datoraCodeContainer = document.querySelector('.datora-discount-field-container');
  const datoraCodeApplied = datoraCodeContainer.querySelectorAll('.applied-discount');
  if (typeof co2 !== 'undefined' && typeof co2.removeDiscountCode === 'function') {
    datoraCodeApplied.forEach(element => {
      const buttonsInElement = element.querySelectorAll('button');
      buttonsInElement.forEach(button => {
          button.disabled = true;
      });
    });

    let resultRemoveDiscountCode = await co2.removeDiscountCode();
    if(resultRemoveDiscountCode){
      document.documentElement.dispatchEvent(new CustomEvent('cart:refresh', { bubbles: true }));

      const datoraInput = document.querySelector('input[name="datora-discount"][form="datora-form"]') || 
                          document.querySelector('input[name="datora-discount"]');
      if (datoraInput) datoraInput.value = '';

      const datoraContainer = datoraInput?.closest('.datora-discount-field-container');
      if (datoraContainer) {
        datoraContainer.classList.remove('error', 'done', 'loading');
      }

      document.querySelectorAll('.discounted[data-datora-price]').forEach(div => {
        resetProductGridDiscount(div);
      });

      datoraCodeApplied[0].disabled = false;

    }else{ datoraCodeApplied[0].disabled = false; }
  }
}

function setDatoraClasses(parentElem, fakeComparePrice) {
  parentElem.querySelectorAll('[data-datora-classes]').forEach(elem => {
    const newClasses = elem.dataset.datoraClasses;

    if(newClasses.length === 0) {
      return;
    }

    if(newClasses.includes('price--compare')) {
      elem.querySelector('span:not(.visually-hidden)').textContent = fakeComparePrice;
    }

    elem.setAttribute('class', newClasses);
  });
}

function resetProductGridDiscount(div){
  div.classList.remove('discounted');
  const oldPrice = div.dataset.datoraPrice;
  const oldCompare = div.dataset.datoraCompare;
  const oldCompareCheck = (oldCompare && oldCompare != "") ? parseInt(oldCompare) : 0;
  let priceClass = "";
  const productMeta = div.closest('product-meta');
  if(productMeta){
    const productMetaPriceClass = productMeta.getAttribute("price-class");
    if(productMetaPriceClass){
      priceClass = productMetaPriceClass;
    }
  }
  if(oldCompareCheck > 0){
  
  }else{
    if (div.querySelector('.price--highlight')){
      div.querySelector('.price--highlight').classList.remove('price--highlight');
    }
    if (div.querySelector('.price--compare')){
      div.querySelector('.price--compare').classList.add('hidden');
    }
  }
  const basePriceFormatted = priceFormatter.format(oldPrice / 100);
  div.querySelector('.price-list .price:not(.price--compare) span:not(.visually-hidden)').textContent = basePriceFormatted;
  if(priceClass != ""){
    div.querySelector('.price-list .price:not(.price--compare) span:not(.visually-hidden)').classList.add(priceClass);
  }
  const datoraInfo = div.querySelector('[data-datora]');
  if (datoraInfo) datoraInfo.textContent = '';
  const badge = div.querySelector('.datora.discount-badge');
  if (badge) badge.setAttribute('hidden', true);
}

async function updateProductGridDiscounts() {
  if (typeof co2 === 'undefined' || typeof co2.getDiscountCode !== 'function') {
    return;
  }

  const getDiscountCode = await co2.getDiscountCode();
  
  if(getDiscountCode){
    // Verwenden Sie Promise.all statt forEach fÃ¼r async Operationen
    const promises = Array.from(document.querySelectorAll('[data-datora-pid]')).map(async (div) => {
      let validDisc = false;
      let newPrice, badgeText;
      const [vid, pid, spgid, tags, price, compare] = [
        div.dataset.datoraVid,
        div.dataset.datoraPid,
        div.dataset.datoraSpgid,
        div.dataset.datoraTags,
        div.dataset.datoraPrice,
        div.dataset.datoraCompare
      ];

      console.log("updateProductGridDiscounts",vid, pid, spgid, tags, price, compare);

      if (!(vid && pid && price)) return;

      let priceClass = "";
      const productMeta = div.closest('product-meta');
      if(productMeta){
        const productMetaPriceClass = productMeta.getAttribute("price-class");
        if(productMetaPriceClass){
          priceClass = productMetaPriceClass;
        }
      }

      try {
        const data = await co2.itemDiscountFull(Number(pid), Number(vid), tags ? tags.split(',') : [], Number(price), 1, spgid === "" || "false" ? null : spgid);
        
        const basePriceFormatted = priceFormatter.format(price / 100);

        if(data){
          console.log("Discount Data", data);
          if (data.calc === "perc" && data.discPerc > 0) {
            validDisc = true;
            const discountedPrice = price - price * data.discPerc / 100;
            newPrice = priceFormatter.format(discountedPrice / 100);
            const discountValue = price * data.discPerc / 100;
            const formattedDiscountValue = priceFormatter.format(discountValue / 100);
            badgeText = `-${data.discPerc}% (${formattedDiscountValue}) ${getDiscountCode.toUpperCase()}`;
          } else if (data.calc === "amt" && data.discAmt > 0) {
            validDisc = true;
            const discountedPrice = price - data.discAmt * 100;
            newPrice = priceFormatter.format(discountedPrice / 100);
            const discountValue = price - discountedPrice;
            const formattedDiscountValue = priceFormatter.format(discountValue / 100);
            badgeText = `(-${formattedDiscountValue}) ${getDiscountCode.toUpperCase()}`;
          }
          if(validDisc){
            div.classList.add('discounted');
            div.querySelector('.price-list .price:not(.price--compare) span:not(.visually-hidden)').textContent = newPrice;
            if(priceClass != ""){
              div.querySelector('.price-list .price:not(.price--compare) span:not(.visually-hidden)').classList.add(priceClass);
            }
            const originalPriceAsComparePrice = priceFormatter.format(price / 100);
            setDatoraClasses(div, originalPriceAsComparePrice);
            div.querySelector('[data-datora]').innerHTML = badgeText;
            const badge = div.querySelector('.datora.discount-badge');
            if (badge) badge.removeAttribute('hidden');
          }else{
            resetProductGridDiscount(div);
          }
        }else{
          resetProductGridDiscount(div);
        }
      } catch (error) {
        console.error('Error processing discount:', error);
      }
    });
    
    await Promise.all(promises);
  }
}

window.addEventListener('co2.cart.initialized', function() {
  if(!co2Initialized){
    updateProductGridDiscounts();
    console.log("EventListener: co2.cart.initialized");
    co2Initialized = true;
  }
});

window.addEventListener('co2.codelink', function(event){
  updateProductGridDiscounts();
  console.log("EventListener: co2.codelink");
});

window.addEventListener('co2.discountCodeSet', function(event){
  updateProductGridDiscounts();
  console.log("EventListener: co2.discountCodeSet");
});

window.addEventListener('variant:changed', function(event){
  updateProductGridDiscounts();
  console.log("EventListener: variant:changed");
});

document.documentElement.addEventListener('cart:refresh', () => {
  if(co2Initialized && co2CartUpdate){
    updateProductGridDiscounts();
    console.log("EventListener: cart:refresh");
  }else{
    co2CartUpdate = true;
  }
});